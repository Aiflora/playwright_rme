import re
import os
import pytest
import random
import time
import pyperclip
from playwright.sync_api import Page, expect
from PIL import Image, ImageDraw

# Папка для временных изображений
TEMP_IMAGE_FOLDER = "temp_images"
os.makedirs(TEMP_IMAGE_FOLDER, exist_ok=True)

def generate_random_image(filename, width, height):
    """Создает случайное изображение заданного размера."""
    img = Image.new("RGB", (width, height), (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
    draw = ImageDraw.Draw(img)
    draw.text((10, 10), "Test Image", fill=(255, 255, 255))
    img_path = os.path.join(TEMP_IMAGE_FOLDER, filename)
    img.save(img_path)
    return img_path

def test_example(page: Page) -> None:
    # Генерация случайных изображений перед загрузкой
    logo_path = generate_random_image("logo.png", 480, 150)
    banner_path = generate_random_image("banner.png", 1125, 432)
    notification_logo_path = generate_random_image("notification_logo.png", 150, 150) 

# Открытие сайта и вход
    page.goto("https://www.recardme.com/")
    page.locator("label").filter(has_text="English").locator("span").nth(2).click()
    page.get_by_role("button", name="Confirm").click()
    page.get_by_role("link", name="Sign in").click()
    page.locator("#email").click()
    page.locator("#email").fill("test_prod@gmail.com")
    page.get_by_placeholder("Password").click()
    page.get_by_placeholder("Password").fill("A200200052!")
    page.get_by_role("button", name="Sign in").click()

    page.get_by_role("link", name="Open Кешбек | Cashback", exact=True).nth(2).click()
    page.get_by_role("link", name="Edit card").click()
    page.get_by_role("textbox", name="Recardme").click()
    page.get_by_role("textbox", name="Recardme").fill("Кешбек кешбек")
    page.get_by_label("", exact=True).nth(1).click()
    page.get_by_label("", exact=True).first.click()
    page.get_by_label("", exact=True).first.fill("#1fd12b")
    page.get_by_text("Card colorsTextBackground").click()
    page.get_by_label("", exact=True).nth(2).click()
    page.get_by_label("", exact=True).nth(2).fill("#072022")
    page.locator("div").filter(has_text=re.compile(r"^Image upload$")).click()
    page.get_by_text("Upload Logo").click()
    page.locator("label").filter(has_text="Recommended dimensions:Rectangular: 480 x 150 pixelsSquare: 150 x 150 pixels").locator("div").first.click()
    page.locator("label").filter(has_text="Recommended dimensions:Rectangular: 480 x 150 pixelsSquare: 150 x 150 pixels").locator("input[type='file']").set_input_files(logo_path)
    page.get_by_text("Upload Banner").click()
    page.locator("label").filter(has_text="Recommended dimensions:1125 x").locator("div").first.click()
    page.locator("label").filter(has_text="Recommended dimensions:1125 x").locator("input[type='file']").set_input_files(banner_path)
    page.get_by_text("Logo for Notifications").click()
    page.locator("label").filter(has_text="This will appear as the icon").locator("div").first.click()
    page.locator("label").filter(has_text="This will appear as the icon").locator("input[type='file']").set_input_files(notification_logo_path)
    page.get_by_role("button", name="Full Name").click()
    page.get_by_text("Phone").click()
    page.get_by_role("button", name="Tier").click()
    page.get_by_text("Full Name").click()
    page.get_by_role("button", name="Balance").click()
    page.get_by_role("listitem").filter(has_text="Tier").click()
    page.get_by_role("spinbutton").first.click()
    page.get_by_role("spinbutton").first.fill("5")
    page.get_by_role("spinbutton").first.click()
    page.get_by_role("spinbutton", name="Days Until Expiration").click()
    page.get_by_role("spinbutton", name="Days Until Expiration").fill("2")
    page.get_by_role("spinbutton", name="Days Before Expiration to").click()
    page.get_by_role("spinbutton", name="Days Before Expiration to").fill("1")
    page.get_by_role("textbox", name="Notification Message").click()
    page.get_by_role("textbox", name="Notification Message").fill("bonus expiration notify")
    page.locator("div").filter(has_text=re.compile(r"^Bronze0\.003\.00%RUB$")).get_by_role("button").first.click()
    page.get_by_role("textbox", name="Gold").click()
    page.get_by_role("textbox", name="Gold").fill("First")
    page.get_by_role("textbox", name="USD").click()
    page.get_by_role("textbox", name="USD").fill("KGS")
    """ 
    
    page.get_by_role("button", name="add dynamic cashback").click()
    page.locator("div").filter(has_text=re.compile(r"^Percentage %start timeend timeupdate dynamic cashback$")).get_by_placeholder("5").click()
    page.locator("div").filter(has_text=re.compile(r"^Percentage %start timeend timeupdate dynamic cashback$")).get_by_placeholder("5").fill("60")
    page.locator("input[name=\"start_time\"]").click()
    page.locator("input[name=\"start_time\"]").fill("07:00") # нужно исправить 
    page.locator("input[name=\"end_time\"]").click()
    page.locator("input[name=\"end_time\"]").fill("22:00")
    page.get_by_role("button", name="Edit").click()

    """
    page.locator("div").filter(has_text=re.compile(r"^Gold10000\.0010\.00%RUB$")).get_by_role("button").nth(1).click()
    page.locator("div").filter(has_text=re.compile(r"^Customize the percentage of points deducted%Add$")).get_by_role("spinbutton").click()
    page.locator("div").filter(has_text=re.compile(r"^Customize the percentage of points deducted%Add$")).get_by_role("spinbutton").fill("100")
    page.locator(".mb-5 > div > div:nth-child(2) > button:nth-child(2)").first.click()
    page.locator(".flex > div:nth-child(2) > .grid").first.click()
    page.locator("div").filter(has_text=re.compile(r"^\.\.\.$")).nth(2).click()
    page.get_by_text("Description", exact=True).click()
    page.get_by_role("textbox", name="Mon-Sun: 10:00 - 20:").click()
    page.get_by_role("textbox", name="Mon-Sun: 10:00 - 20:").fill("instagram.com \nfacebook.com\nlinkedin.com")
    page.get_by_role("button", name="Edit").click()
    page.locator("#visible").get_by_role("button", name="Add").click()
    page.get_by_role("textbox", name="Opening hours").click()
    page.get_by_role("textbox", name="Opening hours").fill("test")
    page.locator("div").filter(has_text=re.compile(r"^\.\.\.$")).nth(2).click()
    page.get_by_text("Description", exact=True).click()
    page.get_by_role("textbox", name="Mon-Sun: 10:00 - 20:").click()
    page.get_by_role("textbox", name="Mon-Sun: 10:00 - 20:").fill("testt")
    page.locator("#visible button").filter(has_text=re.compile(r"^Add$")).click()
    page.get_by_role("button", name="Save").click()
    page.get_by_text("Success!").click()

    page.get_by_role("link", name="Enrollment").click()
    page.get_by_role("textbox", name="Form Title").click()
    page.get_by_role("textbox", name="Form Title").fill("Кешбек кешбек")
    page.get_by_role("textbox", name="Form Description").click()
    page.get_by_role("textbox", name="Form Description").press("ArrowRight")
    page.get_by_role("textbox", name="Form Description").fill("this is test ui")
    page.locator("input[name=\"color\"]").first.click()
    page.locator("input[name=\"color\"]").first.fill("#3ec8da")
    page.locator("input[name=\"background\"]").first.click()
    page.locator("input[name=\"background\"]").first.fill("#e6a8ae")
    page.get_by_text("Edit Card TextForm TitleForm DescriptionCard colorTextBackgroundImage").click()
    page.get_by_role("heading", name="Image upload").click()
    page.get_by_text("Upload Logo").click()
    page.locator("body").set_input_files(logo_path)
    page.locator("div:nth-child(3) > .flex > .relative > .absolute").click()
    page.locator("div:nth-child(3) > .grid").first.click()
    page.get_by_role("button", name="Delete Icon").click()
    page.get_by_role("button", name="Add").click()
    page.get_by_role("textbox", name="Enter name").click()
    page.get_by_role("textbox", name="Enter name").fill("testt")
    page.get_by_role("textbox", name="Enter option name").click()
    page.get_by_role("textbox", name="Enter option name").fill("test1")
    page.locator("div").filter(has_text=re.compile(r"^Field TypeCustomField nameChoice Options Required$")).get_by_role("button").nth(1).click()
    page.get_by_role("textbox", name="Enter option name").click()
    page.get_by_role("textbox", name="Enter option name").fill("test2")
    page.locator("div").filter(has_text=re.compile(r"^Field TypeCustomField nameChoice Optionstest1 Required$")).get_by_role("button").nth(2).click()
    page.get_by_role("textbox", name="Enter option name").click()
    page.get_by_role("textbox", name="Enter option name").fill("test3")
    page.locator("div").filter(has_text=re.compile(r"^Field TypeCustomField nameChoice Optionstest1test2 Required$")).get_by_role("button").nth(3).click()
    page.locator("div").filter(has_text=re.compile(r"^Field TypeCustomField nameChoice Optionstest1test2test3 Required$")).locator("label div").click()
    page.get_by_role("button", name="Add").nth(1).click()
    page.get_by_text("Сохранение и обработка данных").click()
    page.get_by_text("Сохранение и обработка данных").press("ArrowRight")
    page.get_by_text("Сохранение и обработка данных").fill("testtesttest")
    page.get_by_role("button", name="Save").click()
    page.get_by_text("Success!").click()
    page.get_by_role("link", name="Title").click()
